imports:
    - { resource: config.yml }
    - { resource: parameters_dev.yml }

swiftmailer:
    disable_delivery: true
#    delivery_addresses: ['me@example.com']

fr3d_ldap:
    driver:
        host: ros.mu
#        accountDomainName: ros
        accountDomainNameShort: ros
#        accountFilterFormat: (&('sAMAccountName'=%s))
        username: leaves
        password: P@55w0rd
    user:
        baseDn: 'dc=ros,dc=mu'
        attributes:
            - { ldap_attr: samaccountname,  user_method: setUsername }
#            - { ldap_attr: mail,  user_method: setEmail }
#            - { ldap_attr: cn,  user_method: setFirstname }
#            - { ldap_attr: sn,  user_method: setLastname }
#        filter: (&(ObjectClass=person))
        usernameAttribute: 'sAMAccountName'
    service:
        user_hydrator: leaves_overtime.ldap.user_hydrator

framework:
    router:
        resource: '%kernel.project_dir%/app/config/routing_dev.yml'
        strict_requirements: true
    profiler: { only_exceptions: false }

web_profiler:
    toolbar: true
    intercept_redirects: false

monolog:
    handlers:
        main:
            type: stream
            path: '%kernel.logs_dir%/%kernel.environment%.log'
            level: debug
            channels: ['!event']
        console:
            type: console
            process_psr_3_messages: false
            channels: ['!event', '!doctrine', '!console']
        # To follow logs in real time, execute the following command:
        # `bin/console server:log -vv`
        server_log:
            type: server_log
            process_psr_3_messages: false
            host: 127.0.0.1:9911
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type: firephp
        #    level: info
        #chromephp:
        #    type: chromephp
        #    level: info